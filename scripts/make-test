#!/usr/bin/env node

var fs = require('fs')
  , luaparse = require('../')
  , snippets = process.argv.splice(2)
  , indent = '  ';

if (!snippets.length) {
  console.log("Usage:");
  console.log("\tmake-test [snippet|file]...");
  console.log("\tmake-test \"locale foo = \\\"bar\\\"\"");
  console.log("\tmake-test ./tests");
  console.log("Note: files should delimit tests with ---");
}

function scaffoldIt(snippet) {
  var result = JSON.stringify(luaparse.parse(snippet), null, indent)
    , name = snippet.replace(/(\\|')/g, "\\$1")
    , intro = "it('" + name + "', function() {\n"
    , outro = "\n});"
    , assertion = scaffoldAssertion(snippet, result, indent);

  return (intro + assertion + outro).replace(/^(.)/gm, indent + "$1");
}

function scaffoldAssertion(snippet, result, indent) {
  result = result.split('\n');
  var firstline = result.splice(0, 1);
  result = result.join('\n');
  return indent + "expect(parser.parse('" + snippet + "')).to.deep.equal(" +
    firstline + "\n" +
    result.replace(/^(.)/gm, indent + "$1") +
    ");";
}

snippets.forEach(function(snippet) {
  if (fs.existsSync(snippet)) {
    var content = fs.readFileSync(snippet, 'utf-8');
    content = content.split("---");
    content.forEach(function(snippet) {
      snippet = snippet.replace(/\n$/, '');
      console.log(scaffoldIt(snippet));
    });
  } else {
    console.log(scaffoldIt(snippet));
  }
});

/* vim: set sw=2 ts=2 et tw=80 ft=javascript : */
